<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N Countries' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='7'>
        <calculation class='tableau' formula='7' />
      </column>
    </datasource>
    <datasource caption='df_box_office' inline='true' name='federated.1p2daqr0h3zsu71g2t2a81wcjv5v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_box_office' name='textscan.142ahhj19mrj4g16w4mnp0r3h7gn'>
            <connection class='textscan' directory='/Users/mattyancey/Repos/oscars/data_raw' filename='df_box_office.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.142ahhj19mrj4g16w4mnp0r3h7gn' name='df_box_office.csv' table='[df_box_office#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='movie' ordinal='1' />
            <column datatype='real' name='total_gross' ordinal='2' />
            <column datatype='real' name='total_gross_log' ordinal='3' />
            <column datatype='real' name='x_radar' ordinal='4' />
            <column datatype='real' name='y_radar' ordinal='5' />
            <column datatype='integer' name='index_radar' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_box_office.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[df_box_office.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>movie</remote-name>
            <remote-type>129</remote-type>
            <local-name>[movie]</local-name>
            <parent-name>[df_box_office.csv]</parent-name>
            <remote-alias>movie</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_gross</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_gross]</local-name>
            <parent-name>[df_box_office.csv]</parent-name>
            <remote-alias>total_gross</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_gross_log</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_gross_log]</local-name>
            <parent-name>[df_box_office.csv]</parent-name>
            <remote-alias>total_gross_log</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x_radar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x_radar]</local-name>
            <parent-name>[df_box_office.csv]</parent-name>
            <remote-alias>x_radar</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_radar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_radar]</local-name>
            <parent-name>[df_box_office.csv]</parent-name>
            <remote-alias>y_radar</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_radar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index_radar]</local-name>
            <parent-name>[df_box_office.csv]</parent-name>
            <remote-alias>index_radar</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Movie Names' datatype='string' name='[Calculation_809240579695591424]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot; &quot;))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
      <column caption='Total Gross' datatype='real' name='[total_gross]' role='measure' type='quantitative' />
      <column-instance column='[movie]' derivation='None' name='[none:movie:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.315522' measure-ordering='alphabetic' measure-percentage='0.447837' parameter-percentage='0.236641' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:movie:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;a_star_is_born&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;green_book&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;bohemian_rhapsody&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;vice&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;blackkklansman&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;the_favourite&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;black_panther&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='df_reviews' inline='true' name='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_reviews' name='textscan.1p2a6630shyl37162770p10enctm'>
            <connection class='textscan' directory='/Users/mattyancey/Repos/oscars/data_raw' filename='df_reviews.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1p2a6630shyl37162770p10enctm' name='df_reviews.csv' table='[df_reviews#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='movie' ordinal='0' />
            <column datatype='string' name='variable' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
            <column datatype='integer' name='max' ordinal='3' />
            <column datatype='real' name='x_radar' ordinal='4' />
            <column datatype='real' name='y_radar' ordinal='5' />
            <column datatype='integer' name='index_radar' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_reviews.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>movie</remote-name>
            <remote-type>129</remote-type>
            <local-name>[movie]</local-name>
            <parent-name>[df_reviews.csv]</parent-name>
            <remote-alias>movie</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[df_reviews.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[df_reviews.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max]</local-name>
            <parent-name>[df_reviews.csv]</parent-name>
            <remote-alias>max</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x_radar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x_radar]</local-name>
            <parent-name>[df_reviews.csv]</parent-name>
            <remote-alias>x_radar</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_radar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_radar]</local-name>
            <parent-name>[df_reviews.csv]</parent-name>
            <remote-alias>y_radar</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_radar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index_radar]</local-name>
            <parent-name>[df_reviews.csv]</parent-name>
            <remote-alias>index_radar</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='category' datatype='string' name='[Calculation_186125349931909120]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if left([variable], 2) = &apos;im&apos; then &apos;IMDB&apos;&#10;ELSE &apos;RT&apos;&#10;END' />
      </column>
      <column caption='Movie Names' datatype='string' name='[Calculation_809240579696594945]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot;&quot;))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Max' datatype='integer' name='[max]' role='dimension' type='ordinal' />
      <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[max]' derivation='None' name='[none:max:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.377863' measure-ordering='alphabetic' measure-percentage='0.37659' parameter-percentage='0.245547' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:max:ok]' type='palette'>
            <map to='#2e2e2e'>
              <bucket>0</bucket>
            </map>
            <map to='#a5881a'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='df_reviews_2' inline='true' name='federated.1e2cf5v05zuzp31d4jznz0ev6jou' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_reviews_2' name='textscan.10p52wp0pp4xw80zlklap1bpmf9n'>
            <connection class='textscan' directory='/Users/mattyancey/Repos/oscars/data_raw' filename='df_reviews_2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.10p52wp0pp4xw80zlklap1bpmf9n' name='df_reviews_2.csv' table='[df_reviews_2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='movie' ordinal='0' />
            <column datatype='string' name='variable' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
            <column datatype='integer' name='max' ordinal='3' />
            <column datatype='real' name='x_radar' ordinal='4' />
            <column datatype='real' name='y_radar' ordinal='5' />
            <column datatype='integer' name='index_radar' ordinal='6' />
            <column datatype='real' name='index_radar_2' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>movie</remote-name>
            <remote-type>129</remote-type>
            <local-name>[movie]</local-name>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias>movie</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max]</local-name>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias>max</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x_radar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x_radar]</local-name>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias>x_radar</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_radar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_radar]</local-name>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias>y_radar</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_radar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index_radar]</local-name>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias>index_radar</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_radar_2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[index_radar_2]</local-name>
            <parent-name>[df_reviews_2.csv]</parent-name>
            <remote-alias>index_radar_2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Movie Names' datatype='string' name='[Calculation_809240579736096770]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='UPPER([movie])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Index Radar' datatype='integer' name='[index_radar]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[index_radar_2]' role='dimension' type='ordinal' />
      <column caption='Max' datatype='integer' name='[max]' role='measure' type='quantitative' />
      <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_809240579736096770]' derivation='None' name='[none:Calculation_809240579736096770:nk]' pivot='key' type='nominal' />
      <column-instance column='[movie]' derivation='None' name='[none:movie:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.380567' measure-ordering='alphabetic' measure-percentage='0.379217' parameter-percentage='0.240216' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:movie:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;a star is born&quot;</bucket>
            </map>
            <map to='#25b392'>
              <bucket>&quot;black panther&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;vice&quot;</bucket>
            </map>
            <map to='#78ab30'>
              <bucket>&quot;blackkklansman&quot;</bucket>
            </map>
            <map to='#c26abf'>
              <bucket>&quot;the favourite&quot;</bucket>
            </map>
            <map to='#e23b25'>
              <bucket>&quot;green book&quot;</bucket>
            </map>
            <map to='#f8b11f'>
              <bucket>&quot;bohemian rhapsody&quot;</bucket>
            </map>
            <map to='#f9608b'>
              <bucket>&quot;roma&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_809240579736096770:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;BOHEMIAN RHAPSODY&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;BLACK PANTHER&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;VICE&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;ROMA&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;GREEN BOOK&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;THE FAVOURITE&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;A STAR IS BORN&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;BLACKKKLANSMAN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='df_box_office_2' inline='true' name='federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_box_office_2' name='textscan.0vl1dw707zm4rg171l8vz06yqzfh'>
            <connection class='textscan' directory='/Users/mattyancey/Repos/oscars/data_raw' filename='df_box_office_2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0vl1dw707zm4rg171l8vz06yqzfh' name='df_box_office_2.csv' table='[df_box_office_2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='movie' ordinal='1' />
            <column datatype='real' name='total_gross' ordinal='2' />
            <column datatype='real' name='total_gross_log' ordinal='3' />
            <column datatype='real' name='x_radar' ordinal='4' />
            <column datatype='real' name='y_radar' ordinal='5' />
            <column datatype='integer' name='index_radar' ordinal='6' />
            <column datatype='integer' name='index_radar_2' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>movie</remote-name>
            <remote-type>129</remote-type>
            <local-name>[movie]</local-name>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias>movie</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_gross</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_gross]</local-name>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias>total_gross</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_gross_log</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_gross_log]</local-name>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias>total_gross_log</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x_radar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x_radar]</local-name>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias>x_radar</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_radar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_radar]</local-name>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias>y_radar</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_radar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index_radar]</local-name>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias>index_radar</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_radar_2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index_radar_2]</local-name>
            <parent-name>[df_box_office_2.csv]</parent-name>
            <remote-alias>index_radar_2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Movie Names' datatype='string' name='[Calculation_809240579736285187]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot; &quot;))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' caption='Index Radar' datatype='integer' name='[index_radar]' role='dimension' type='ordinal' />
      <column caption='Index Radar 2' datatype='integer' name='[index_radar_2]' role='measure' type='quantitative' />
      <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
      <column caption='Total Gross' datatype='real' name='[total_gross]' role='measure' type='quantitative' />
      <column caption='Total Gross Log' datatype='real' name='[total_gross_log]' role='measure' type='quantitative' />
      <column caption='X Radar' datatype='real' name='[x_radar]' role='measure' type='quantitative' />
      <column caption='Y Radar' datatype='real' name='[y_radar]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_809240579736285187]' derivation='None' name='[none:Calculation_809240579736285187:nk]' pivot='key' type='nominal' />
      <column-instance column='[movie]' derivation='None' name='[none:movie:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.445344' parameter-percentage='0.221323' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:movie:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#5fbb68'>
              <bucket>&quot;green_book&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;roma&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;the_favourite&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;vice&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;a_star_is_born&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;blackkklansman&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;bohemian_rhapsody&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;black_panther&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_809240579736285187:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;BOHEMIAN RHAPSODY&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;BLACK PANTHER&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;VICE&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;ROMA&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;GREEN BOOK&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;THE FAVOURITE&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;A STAR IS BORN&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;BLACKKKLANSMAN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Box Office by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_box_office' name='federated.1p2daqr0h3zsu71g2t2a81wcjv5v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Countries' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='7'>
              <calculation class='tableau' formula='7' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1p2daqr0h3zsu71g2t2a81wcjv5v'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[movie]' derivation='None' name='[none:movie:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_gross]' derivation='Sum' name='[sum:total_gross:qk]' pivot='key' type='quantitative' />
            <column caption='Total Gross' datatype='real' name='[total_gross]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_gross])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]</rows>
        <cols>([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:movie:nk] / [federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Radar Box Office'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_box_office' name='federated.1p2daqr0h3zsu71g2t2a81wcjv5v' />
          </datasources>
          <datasource-dependencies datasource='federated.1p2daqr0h3zsu71g2t2a81wcjv5v'>
            <column caption='Movie Names' datatype='string' name='[Calculation_809240579695591424]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot; &quot;))' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[index_radar]' role='measure' type='quantitative' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_809240579695591424]' derivation='None' name='[none:Calculation_809240579695591424:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='Sum' name='[sum:index_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_gross]' derivation='Sum' name='[sum:total_gross:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Total Gross' datatype='real' name='[total_gross]' role='measure' type='quantitative' />
            <column datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <encoding attr='space' class='1' field='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a5881a' />
                <format attr='mark-transparency' value='114' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <path column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a5881a' />
                <format attr='mark-transparency' value='114' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk] + [federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk])</rows>
        <cols>([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk] * ([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk] + [federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Radar Box Office (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_box_office' name='federated.1p2daqr0h3zsu71g2t2a81wcjv5v' />
          </datasources>
          <datasource-dependencies datasource='federated.1p2daqr0h3zsu71g2t2a81wcjv5v'>
            <column caption='Movie Names' datatype='string' name='[Calculation_809240579695591424]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot; &quot;))' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[index_radar]' role='measure' type='quantitative' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_809240579695591424]' derivation='None' name='[none:Calculation_809240579695591424:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='Sum' name='[sum:index_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_gross]' derivation='Sum' name='[sum:total_gross:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Total Gross' datatype='real' name='[total_gross]' role='measure' type='quantitative' />
            <column datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_809240579695591424:nk]' member='&quot;BLACK PANTHER&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579695591424:nk]' member='&quot;BLACKKKLANSMAN&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579695591424:nk]' member='&quot;BOHEMIAN RHAPSODY&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579695591424:nk]' member='&quot;GREEN BOOK&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</column>
            <column>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <encoding attr='space' class='1' field='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a5881a' />
                <format attr='mark-transparency' value='114' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <path column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a5881a' />
                <format attr='mark-transparency' value='114' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk] + [federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk])</rows>
        <cols>([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk] * ([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk] + [federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Radar Box Office (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_box_office' name='federated.1p2daqr0h3zsu71g2t2a81wcjv5v' />
          </datasources>
          <datasource-dependencies datasource='federated.1p2daqr0h3zsu71g2t2a81wcjv5v'>
            <column caption='Movie Names' datatype='string' name='[Calculation_809240579695591424]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot; &quot;))' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[index_radar]' role='measure' type='quantitative' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_809240579695591424]' derivation='None' name='[none:Calculation_809240579695591424:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='Sum' name='[sum:index_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_gross]' derivation='Sum' name='[sum:total_gross:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Total Gross' datatype='real' name='[total_gross]' role='measure' type='quantitative' />
            <column datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_809240579695591424:nk]' member='&quot;A STAR IS BORN&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579695591424:nk]' member='&quot;ROMA&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579695591424:nk]' member='&quot;THE FAVOURITE&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579695591424:nk]' member='&quot;VICE&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;THE FAVOURITE&quot;</bucket>
              <bucket>&quot;ROMA&quot;</bucket>
              <bucket>&quot;A STAR IS BORN&quot;</bucket>
              <bucket>&quot;VICE&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</column>
            <column>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <encoding attr='space' class='1' field='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a5881a' />
                <format attr='mark-transparency' value='114' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <path column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a5881a' />
                <format attr='mark-transparency' value='114' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
              <tooltip column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
              <lod column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk] + [federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk])</rows>
        <cols>([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk] * ([federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk] + [federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Radar Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_reviews' name='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl' />
          </datasources>
          <datasource-dependencies datasource='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl'>
            <column caption='Movie Names' datatype='string' name='[Calculation_809240579696594945]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot;&quot;))' />
            </column>
            <column datatype='integer' name='[index_radar]' role='measure' type='quantitative' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_809240579696594945]' derivation='None' name='[none:Calculation_809240579696594945:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='Sum' name='[sum:index_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;imdb_18&quot;' function='range' level='[none:variable:nk]' to='&quot;imdb_45&quot;' />
              <groupfilter from='&quot;rt_all_critics&quot;' function='range' level='[none:variable:nk]' to='&quot;rt_top_critics&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:y_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:x_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]' />
              <lod column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:index_radar:qk]' />
              <path column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:index_radar:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='114' />
                <format attr='mark-color' value='#a5881a' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:y_radar:qk]</rows>
        <cols>([federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk] * [federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:x_radar:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Radar Reviews (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_reviews' name='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl' />
          </datasources>
          <datasource-dependencies datasource='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl'>
            <column caption='Movie Names' datatype='string' name='[Calculation_809240579696594945]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot;&quot;))' />
            </column>
            <column datatype='integer' name='[index_radar]' role='measure' type='quantitative' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_809240579696594945]' derivation='None' name='[none:Calculation_809240579696594945:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='Sum' name='[sum:index_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_809240579696594945:nk]' member='&quot;BLACK PANTHER&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579696594945:nk]' member='&quot;BLACKKKLANSMAN&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579696594945:nk]' member='&quot;BOHEMIAN RHAPSODY&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579696594945:nk]' member='&quot;GREEN BOOK&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;imdb_18&quot;' function='range' level='[none:variable:nk]' to='&quot;imdb_45&quot;' />
              <groupfilter from='&quot;rt_all_critics&quot;' function='range' level='[none:variable:nk]' to='&quot;rt_top_critics&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</column>
            <column>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:y_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:x_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:x_radar:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:y_radar:qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:x_radar:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:y_radar:qk]' scope='rows' value='false' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]' />
              <lod column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:index_radar:qk]' />
              <path column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:index_radar:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='114' />
                <format attr='mark-color' value='#a5881a' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:y_radar:qk]</rows>
        <cols>([federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk] * [federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:x_radar:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Radar Reviews (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_reviews' name='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl' />
          </datasources>
          <datasource-dependencies datasource='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl'>
            <column caption='Movie Names' datatype='string' name='[Calculation_809240579696594945]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot;&quot;))' />
            </column>
            <column datatype='integer' name='[index_radar]' role='measure' type='quantitative' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_809240579696594945]' derivation='None' name='[none:Calculation_809240579696594945:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='Sum' name='[sum:index_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_809240579696594945:nk]' member='&quot;A STAR IS BORN&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579696594945:nk]' member='&quot;ROMA&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579696594945:nk]' member='&quot;THE FAVOURITE&quot;' />
              <groupfilter function='member' level='[none:Calculation_809240579696594945:nk]' member='&quot;VICE&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;THE FAVOURITE&quot;</bucket>
              <bucket>&quot;ROMA&quot;</bucket>
              <bucket>&quot;A STAR IS BORN&quot;</bucket>
              <bucket>&quot;VICE&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;imdb_18&quot;' function='range' level='[none:variable:nk]' to='&quot;imdb_45&quot;' />
              <groupfilter from='&quot;rt_all_critics&quot;' function='range' level='[none:variable:nk]' to='&quot;rt_top_critics&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</column>
            <column>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:y_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:x_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]' />
              <lod column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:index_radar:qk]' />
              <path column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:index_radar:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='114' />
                <format attr='mark-color' value='#a5881a' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:y_radar:qk]</rows>
        <cols>([federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk] * [federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:x_radar:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Radar V2 Box Office'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_box_office_2' name='federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r' />
          </datasources>
          <datasource-dependencies datasource='federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Sum' caption='Index Radar' datatype='integer' name='[index_radar]' role='dimension' type='ordinal' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='None' name='[none:index_radar:ok]' pivot='key' type='ordinal' />
            <column-instance column='[movie]' derivation='None' name='[none:movie:nk]' pivot='key' type='nominal' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='X Radar' datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column caption='Y Radar' datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:movie:nk]' />
              <lod column='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:country:nk]' />
              <path column='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:index_radar:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[sum:y_radar:qk]</rows>
        <cols>([federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:movie:nk] * [federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[sum:x_radar:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Radar V2 Overlay Box Office'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_box_office_2' name='federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r' />
          </datasources>
          <datasource-dependencies datasource='federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r'>
            <column caption='Movie Names' datatype='string' name='[Calculation_809240579736285187]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER(REPLACE([movie], &quot;_&quot;, &quot; &quot;))' />
            </column>
            <column-instance column='[total_gross]' derivation='Avg' name='[avg:total_gross:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Sum' caption='Index Radar' datatype='integer' name='[index_radar]' role='dimension' type='ordinal' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_809240579736285187]' derivation='None' name='[none:Calculation_809240579736285187:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='None' name='[none:index_radar:ok]' pivot='key' type='ordinal' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Total Gross' datatype='real' name='[total_gross]' role='measure' type='quantitative' />
            <column caption='X Radar' datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column caption='Y Radar' datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:Calculation_809240579736285187:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;BLACK PANTHER&quot;</bucket>
              <bucket>&quot;BLACKKKLANSMAN&quot;</bucket>
              <bucket>&quot;BOHEMIAN RHAPSODY&quot;</bucket>
              <bucket>&quot;THE FAVOURITE&quot;</bucket>
              <bucket>&quot;GREEN BOOK&quot;</bucket>
              <bucket>&quot;ROMA&quot;</bucket>
              <bucket>&quot;A STAR IS BORN&quot;</bucket>
              <bucket>&quot;VICE&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[sum:y_radar:qk]' field-type='quantitative' max='25.0' min='-25.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[sum:x_radar:qk]' field-type='quantitative' max='25.0' min='-25.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:Calculation_809240579736285187:nk]' />
              <lod column='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:country:nk]' />
              <path column='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:index_radar:ok]' />
              <tooltip column='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[avg:total_gross:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Movie:&#9;</run>
                <run bold='true'>&lt;[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:Calculation_809240579736285187:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:country:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Total Gross:&#9;</run>
                <run bold='true'>&lt;[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[avg:total_gross:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[sum:y_radar:qk]</rows>
        <cols>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[sum:x_radar:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Radar V2 Overlay Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_reviews_2' name='federated.1e2cf5v05zuzp31d4jznz0ev6jou' />
          </datasources>
          <datasource-dependencies datasource='federated.1e2cf5v05zuzp31d4jznz0ev6jou'>
            <column caption='Movie Names' datatype='string' name='[Calculation_809240579736096770]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([movie])' />
            </column>
            <column aggregation='Sum' caption='Index Radar' datatype='integer' name='[index_radar]' role='dimension' type='ordinal' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_809240579736096770]' derivation='None' name='[none:Calculation_809240579736096770:nk]' pivot='key' type='nominal' />
            <column-instance column='[index_radar]' derivation='None' name='[none:index_radar:ok]' pivot='key' type='ordinal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:Calculation_809240579736096770:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;BLACK PANTHER&quot;</bucket>
              <bucket>&quot;BLACKKKLANSMAN&quot;</bucket>
              <bucket>&quot;BOHEMIAN RHAPSODY&quot;</bucket>
              <bucket>&quot;THE FAVOURITE&quot;</bucket>
              <bucket>&quot;GREEN BOOK&quot;</bucket>
              <bucket>&quot;ROMA&quot;</bucket>
              <bucket>&quot;A STAR IS BORN&quot;</bucket>
              <bucket>&quot;VICE&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;imdb_18&quot;' function='range' level='[none:variable:nk]' to='&quot;imdb_45&quot;' />
              <groupfilter from='&quot;rt_all_critics&quot;' function='range' level='[none:variable:nk]' to='&quot;rt_top_critics&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[sum:y_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[sum:x_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:Calculation_809240579736096770:nk]' />
              <lod column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:variable:nk]' />
              <path column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:index_radar:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[sum:y_radar:qk]</rows>
        <cols>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[sum:x_radar:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Radar V2 Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_reviews_2' name='federated.1e2cf5v05zuzp31d4jznz0ev6jou' />
          </datasources>
          <datasource-dependencies datasource='federated.1e2cf5v05zuzp31d4jznz0ev6jou'>
            <column aggregation='Sum' caption='Index Radar' datatype='integer' name='[index_radar]' role='dimension' type='ordinal' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[index_radar]' derivation='None' name='[none:index_radar:ok]' pivot='key' type='ordinal' />
            <column-instance column='[movie]' derivation='None' name='[none:movie:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[x_radar]' derivation='Sum' name='[sum:x_radar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_radar]' derivation='Sum' name='[sum:y_radar:qk]' pivot='key' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column datatype='real' name='[x_radar]' role='measure' type='quantitative' />
            <column datatype='real' name='[y_radar]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;imdb_18&quot;' function='range' level='[none:variable:nk]' to='&quot;imdb_45&quot;' />
              <groupfilter from='&quot;rt_all_critics&quot;' function='range' level='[none:variable:nk]' to='&quot;rt_top_critics&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[sum:y_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[sum:x_radar:qk]' field-type='quantitative' max='105.0' min='-105.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:movie:nk]' />
              <lod column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:variable:nk]' />
              <lod column='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:index_radar:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[sum:y_radar:qk]</rows>
        <cols>([federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:movie:nk] * [federated.1e2cf5v05zuzp31d4jznz0ev6jou].[sum:x_radar:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Top Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_box_office' name='federated.1p2daqr0h3zsu71g2t2a81wcjv5v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Countries' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='7'>
              <calculation class='tableau' formula='7' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1p2daqr0h3zsu71g2t2a81wcjv5v'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_gross]' derivation='Sum' name='[sum:total_gross:qk]' pivot='key' type='quantitative' />
            <column caption='Total Gross' datatype='real' name='[total_gross]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_gross])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]' direction='DESC' using='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
          <slices>
            <column>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='critics_imdb'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_reviews' name='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl' />
          </datasources>
          <datasource-dependencies datasource='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl'>
            <column aggregation='Sum' caption='Max' datatype='integer' name='[max]' role='dimension' type='ordinal' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[max]' derivation='None' name='[none:max:ok]' pivot='key' type='ordinal' />
            <column-instance column='[movie]' derivation='None' name='[none:movie:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;black panther&quot;</bucket>
              <bucket>&quot;blackkklansman&quot;</bucket>
              <bucket>&quot;bohemian rhapsody&quot;</bucket>
              <bucket>&quot;the favourite&quot;</bucket>
              <bucket>&quot;green book&quot;</bucket>
              <bucket>&quot;roma&quot;</bucket>
              <bucket>&quot;a star is born&quot;</bucket>
              <bucket>&quot;vice&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;imdb_18&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;imdb_18_29&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;imdb_30_44&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;imdb_45&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:max:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:value:qk]</rows>
        <cols>([federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk] / [federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='critics_rt'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_reviews' name='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl' />
          </datasources>
          <datasource-dependencies datasource='federated.1jjo8ef0m3k2iw11jpeh10fcu9sl'>
            <column caption='category' datatype='string' name='[Calculation_186125349931909120]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if left([variable], 2) = &apos;im&apos; then &apos;IMDB&apos;&#10;ELSE &apos;RT&apos;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Max' datatype='integer' name='[max]' role='dimension' type='ordinal' />
            <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_186125349931909120]' derivation='None' name='[none:Calculation_186125349931909120:nk]' pivot='key' type='nominal' />
            <column-instance column='[max]' derivation='None' name='[none:max:ok]' pivot='key' type='ordinal' />
            <column-instance column='[movie]' derivation='None' name='[none:movie:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_186125349931909120:nk]'>
            <groupfilter function='member' level='[none:Calculation_186125349931909120:nk]' member='&quot;RT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;black panther&quot;</bucket>
              <bucket>&quot;blackkklansman&quot;</bucket>
              <bucket>&quot;bohemian rhapsody&quot;</bucket>
              <bucket>&quot;the favourite&quot;</bucket>
              <bucket>&quot;green book&quot;</bucket>
              <bucket>&quot;roma&quot;</bucket>
              <bucket>&quot;a star is born&quot;</bucket>
              <bucket>&quot;vice&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;rt_all_critics&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;rt_audience_score&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;rt_top_critics&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;rt_all_critics&quot;</bucket>
              <bucket>&quot;rt_top_critics&quot;</bucket>
              <bucket>&quot;rt_audience_score&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_186125349931909120:nk]</column>
            <column>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:max:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[sum:value:qk]</rows>
        <cols>([federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk] / [federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='1600' maxwidth='1200' minheight='1600' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='17125' id='1' name='Radar Reviews (2)' show-title='false' w='87250' x='12083' y='500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='20250' id='3' name='Radar Reviews (3)' show-title='false' w='87250' x='12083' y='17625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='25500' id='4' name='Radar Box Office (2)' w='87250' x='12083' y='37875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='26688' id='5' name='Radar Box Office (3)' w='87250' x='12083' y='63375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='99000' id='6' type='empty' w='11416' x='667' y='500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9437' id='7' type='empty' w='87250' x='12083' y='90063'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1800' minheight='800' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='99112' x='444' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='99112' x='444' y='1000'>
              <zone h='98000' id='1' name='Radar V2 Overlay Box Office' w='40112' x='444' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='7' name='Radar V2 Overlay Reviews' w='44500' x='55056' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='6' name='Radar V2 Overlay Box Office' pane-specification-id='0' param='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:Calculation_809240579736285187:nk]' type='color' w='14500' x='40556' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='critics_rt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:max:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_186125349931909120:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:max:ok]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:max:qk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D37B7A13-00AE-4607-A77D-C5D46DD3DCDE}' />
    </window>
    <window class='worksheet' name='critics_imdb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:max:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_186125349931909120:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:max:ok]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:max:qk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{542AA342-3A4F-4810-B8D3-6D42634DA37B}' />
    </window>
    <window class='worksheet' name='Top Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0F096235-DE84-4407-AA14-BF6C8C4F286F}' />
    </window>
    <window class='worksheet' name='Box Office by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</field>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:movie:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18480778-7C04-49AC-9E6A-76A355831364}' />
    </window>
    <window class='worksheet' name='Radar Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{323265DA-B725-4C5E-A985-64869073A8AF}' />
    </window>
    <window class='worksheet' name='Radar Reviews (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B45DAB41-4EA3-4D38-8553-C71AC7EF1BDA}' />
    </window>
    <window class='worksheet' name='Radar Reviews (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:Calculation_809240579696594945:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:movie:nk]</field>
            <field>[federated.1jjo8ef0m3k2iw11jpeh10fcu9sl].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{881E46D1-B7DC-4ABF-8CA7-C5F1158989A1}' />
    </window>
    <window class='worksheet' name='Radar Box Office'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]</field>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</field>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:movie:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF9F8336-1C28-4C59-AA50-B94AACD7D3F7}' />
    </window>
    <window class='worksheet' name='Radar Box Office (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]</field>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</field>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:movie:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{094FCAE1-9D4C-46F7-9DAC-C1784289722E}' />
    </window>
    <window class='worksheet' name='Radar Box Office (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]</field>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</field>
            <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:movie:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13902BEB-2EB3-47C6-A357-6E5541343FC4}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Radar Box Office (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Radar Box Office (3)'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor x-index='1' y-index='1'>
                    <x-fields x-index='1' y-index='1'>
                      <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]</field>
                      <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]</field>
                    </x-fields>
                    <y-fields x-index='1' y-index='1'>
                      <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:Calculation_809240579695591424:nk]</field>
                    <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[none:country:nk]</field>
                    <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:index_radar:qk]</field>
                    <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:total_gross:qk]</field>
                    <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:x_radar:qk]</field>
                    <field>[federated.1p2daqr0h3zsu71g2t2a81wcjv5v].[sum:y_radar:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;ROMA&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>2</value>
                  <value>%null%</value>
                  <value>0.0</value>
                  <value>0.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Radar Reviews (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Radar Reviews (3)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{24AB1C1C-5DC3-45AE-9D95-D3B250ADC37E}' />
    </window>
    <window class='worksheet' name='Radar V2 Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:movie:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:index_radar:ok]</field>
            <field>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:movie:nk]</field>
            <field>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{38FDA17D-BCB8-4452-9EED-0737B5F4ED9F}' />
    </window>
    <window class='worksheet' name='Radar V2 Box Office'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:movie:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:country:nk]</field>
            <field>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:index_radar:ok]</field>
            <field>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:movie:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{06E5040C-FA4A-4E6B-960F-AFB37C4F71B9}' />
    </window>
    <window class='worksheet' name='Radar V2 Overlay Box Office'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:Calculation_809240579736285187:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:Calculation_809240579736285187:nk]'>
          <color-one-way>
            <field>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:Calculation_809240579736285187:nk]</field>
            <field>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:country:nk]</field>
            <field>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:index_radar:ok]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;GREEN BOOK&quot;</bucket>
          </bucket-selection>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{67891601-8DC3-43BD-B515-EB0A3A0F20BB}' />
    </window>
    <window class='worksheet' name='Radar V2 Overlay Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:Calculation_809240579736096770:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:Calculation_809240579736096770:nk]</field>
            <field>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:index_radar:ok]</field>
            <field>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:index_radar_2:ok]</field>
            <field>[federated.1e2cf5v05zuzp31d4jznz0ev6jou].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{83663A4F-A073-41A5-9D35-E9F9F831D448}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Radar V2 Overlay Box Office'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0a8kr8v1xl9nz61bnpt5r0yx2j8r].[none:Calculation_809240579736285187:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Radar V2 Overlay Reviews'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{F7F400E8-4DBB-49E2-95F2-13652E212CA3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Box Office by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      daIXxOImqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Radar Box Office' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Radar Box Office (2)' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Radar Box Office (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Radar Reviews' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Radar Reviews (2)' width='192'>
      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
      ljdTXBu+3dCd3r00ZAAA2trauHH7v5hedHFd2Tf0Y56nmF3yGB75tOE7vXtp2ADAbgj6Bx4w
      PrMjWyZ+4HmK6fkyH13+mObm5qDLCVxDB0DTNE6dOsWZgUdMvJQQKKVY26hwvPs6vb19kb3v
      /7GGDsAbZ8+epaP3Fgsr0d0yoZQiv21jG6cZHLwcdDmhEYkAAFy6dBktdYGFlfB+Zu1RqtZc
      VjZTXLl6q65Obz5qkXolRkZu41ofsZ6LVqPMdT3mVjWu3Wz87c37FakAANwcuU2+1s3m62iE
      QCnFzEKZ/oF7DflM70FFLgCmaXLr9kPW8sfJvW68Q7cc16Nmu5TKDttFm4WVEsdOXKev72TQ
      pYWSppRStm0zNTUVdC2+qlQq/PMff+JkW4FMOhwbwFxP4bketqOwHQ/b9rAdD9f1cFyF7bgo
      ZaDY/QIdhYlCf/s9y4xhmAZWLIFhmKRSTXw0MCj3/e8Q2QAAFItFvvridwyc9EgmzAP9LKXU
      D4NVUbM9bNv94U8P11NUqg5ggqaDtjto0SzQDMAAzcQwdgdvPJYgFo8Ti+1+WVYM07KIxeIY
      hoGu6+/8kqXN/Yl0AAC2trb4+svfc+H07sCp2rvvuLXa7q2E6ypKFQeldDRNB91C00zQLDTd
      2P27bqHruwPUtCzi8TjxWJx4fHcgm6ZJKpV++y784z81TUPTNBm8AYl8AADy+TxTkxNYlkU8
      kcA0TeLxOIkf/p5OZ97ul3kzSH88WN8MYlF/JAAi0mRmJCJNAiAiTQIgIk0CICJNAiAiTQIg
      Ik0CICJNAiAiTQIgIk0CICJNAiAiTQIgIk0CICJNAiAiTQIgIk0CICJNAiAiTQIgIk0CICJN
      AiAiTQIgIk0CICJNAiAiTQIgIk0CICJNAiAiTQIgIk0CICJNAiAi7f8BFEXVUFZ4TxgAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Radar Reviews (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Radar V2 Box Office' width='192'>
      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
      k08+OfZvWZYVAdyJM2fO0N7eTnd3N59++inz5s2jsrKS8+fP88Ybb+ByudixY8e0WEUKCgpQ
      qVS8++67BINBqqurp3VHeHBwkFOnTtHX10dXVxfvvfceGzZsYMmSJXz++ee0trYyPDzM+vXr
      p60OyeTy5csI8iw27DY1NbFgwYJpLcPtdo/lKQYwGo3YbDZcLhcul4v09HTy8/OnJa6OLMsM
      Dw/T29uLTqejsLAQvV4/bVOhSCSC2+2+ydJkt9vR6/X09/czNDREdnY2WVlZ0z4NSkbbejwe
      RQAKM5Nkta1iBVKY0ygCUJjTKAJQmNMoAlCY0ygCUJjTKAJQmNMoAlCY0ygCUJjTKAKYxUSj
      UVpbW2/aqVaYGIoAksThw4f51a9+hcPhQJIk/uEf/oF//ud/JhqNIssyH3zwAd///vf56U9/
      yt/93d/R2Nh4x3sODQ3x29/+luvXryfhCe5OFAEkibq6OsLhML/5zW945513OHz4MEuXLh07
      eNLf308kEmHbtm20t7fzl3/5l2OJMc6ePcuZM2fo7e1FkiR8Ph+XLl3i3LlzdHR0EIlEGBgY
      4Ny5c5w+fXrsOofDQXt7O62trYpIboPiDZokrFYrzz//PH/913/N8ePHefTRR6mtrb3pmsLC
      Qh5++GFEUeSf/umfCIVC7Nu3j9OnTxMMBikuLuaXv/wl+/bt48MPP0Sv19Pb24ssy+zfv59D
      hw4RiUQoKyvjJz/5CR9//DHHjx9HFEXWrl3LD3/4wxQ9/cxFEUASqa6uprS0lIaGBnbs2PEt
      j8rm5mb+6q/+iosXL7Jo0SLMZjPbt29n6dKlnDhxgo8++oj29nb279/P3r17mTdvHn/7t3+L
      IAhs2rSJ+fPnc+3aNf74xz/S2dlJMBiko6ODF154gQceeCBFTz2zUQSQRBobG2lra8NgMPDh
      hx/y2muv3eRGLcsy3d3diKLIiy++iN/v5/e//z0tLS2kp6cTjUYJBoOIokhVVRXZ2dnodDri
      8Ti/+93vaGpqGjtDEIvFANiwYQNPPvlkSgLrzgaUNUCS8Hg8/P73v6e+vp5XX32VQ4cOceHC
      hZuumT9/Pr/85S/Jzc3lD3/4Az09PVy7do36+npWr16NTqfDZDKRlpbGgQMHOHXqFE6nE0mS
      aGhoYPny5axfv/6mkUWv18/pNKh3QhkBksTZs2eRJImXX34Zu91OU1MTx48fZ9GiRRgMBmw2
      GwUFBVRXV/OLX/yCX//615w4cYI1a9Zw8ODBsWtyc3PZtm0b77zzDufOnRsTxX333ceXX37J
      lStXyMzMxGw2Y7PZUpJUYzahHIiZ4ciyjNfrxWKxjPXssizj9/vRaDQYjUZg5NB6IBDAZDLN
      6kProySrbZURYIYzejj+mz+zWq03/UylUn3rZwp3RlkDKMxpFAEozGkUASjMaf5/IPHHxHEj
      bxcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Radar V2 Overlay Box Office' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Radar V2 Overlay Reviews' width='192'>
      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
      jokAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Radar V2 Reviews' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='164' name='Top Countries' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='critics_imdb' width='192'>
      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
      Dqo4cgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='critics_rt' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
